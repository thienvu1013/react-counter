{"version":3,"sources":["components/Count.js","components/InputField.js","components/App.js","index.js"],"names":["Count","state","count","increment","setState","getNumber","decrement","setCounter","num","theNum","parseInt","this","React","Component","InputField","props","increase","countElement","current","decrease","setInputValue","inputNum","handleKeyDown","e","key","submit","createRef","className","type","placeholder","value","onChange","target","onKeyDown","onClick","ref","App","ReactDOM","render","document","querySelector"],"mappings":"2LAyCeA,G,iNArCXC,MAAQ,CAACC,MAAM,G,EAEfC,UAAY,WACR,EAAKC,SAAS,CAACF,MAAM,EAAKG,UAAU,EAAKJ,MAAMC,MAAM,M,EAGzDI,UAAY,WACR,EAAKF,SAAS,CAACF,MAAM,EAAKG,UAAU,EAAKJ,MAAMC,MAAM,M,EAIzDK,WAAa,SAACC,GACV,IAAMC,EAASC,SAASF,GACxB,EAAKJ,SAAS,CAACF,MAAM,EAAKG,UAAUI,M,EAGxCJ,UAAY,SAACG,GACT,OAAGA,EAAI,IACI,IAEHA,EAAM,EACH,EAECA,G,uDAMZ,OACI,6BACKG,KAAKV,MAAMC,Y,GAhCRU,IAAMC,YCgEXC,E,kDA7DX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAKVC,SAAW,WACP,EAAKC,aAAaC,QAAQf,aAPZ,EAUlBgB,SAAW,WACP,EAAKF,aAAaC,QAAQZ,aAXZ,EAclBc,cAAgB,SAACZ,GACb,EAAKJ,SAAS,CAACiB,SAASb,KAfV,EAkBlBc,cAAgB,SAACC,GACC,UAAVA,EAAEC,KACF,EAAKP,aAAaC,QAAQX,WAAW,EAAKN,MAAMoB,WApBtC,EAwBlBI,OAAS,WAEL,EAAKR,aAAaC,QAAQX,WAAW,EAAKN,MAAMoB,WAxBhD,EAAKJ,aAAeL,IAAMc,YAC1B,EAAKzB,MAAQ,CAACoB,SAAS,IAHT,E,qDA8BT,IAAD,OACJ,OACQ,qBAAKM,UAAY,UAAjB,SACI,sBAAKA,UAAY,iBAAjB,UACI,sBAAKA,UAAY,SAAjB,UACI,sBAAKA,UAAU,kBAAf,UACI,uBACIC,KAAK,OACLC,YAAY,oBACZC,MAAQnB,KAAKV,MAAMoB,SACnBU,SAAU,SAACR,GAAM,EAAKH,cAAcG,EAAES,OAAOF,QAC7CG,UAAW,SAACV,GAAK,EAAKD,cAAcC,MAExC,wBAAQW,QAAUvB,KAAKc,OAAQE,UAAW,iBAA1C,uBAEJ,uBACA,sBAAKA,UAAU,aAAf,UACI,wBAAQO,QAAUvB,KAAKK,SAAUW,UAAU,sBAA3C,gBACA,wBAAQO,QAAUvB,KAAKQ,SAAUQ,UAAU,wBAA3C,wBAIR,qBAAKA,UAAY,SAAjB,SACI,cAAC,EAAD,CAAOQ,IAAMxB,KAAKM,0B,GAtDrBL,IAAMC,WCMhBuB,EARH,WACR,OACI,8BACI,cAAC,EAAD,OCFZC,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,cAAc,Y","file":"static/js/main.123fcf8e.chunk.js","sourcesContent":["import React from 'react';\nimport \"semantic-ui-css/semantic.min.css\";\n\nclass Count extends React.Component{\n    state = {count:0};\n\n    increment = () =>{\n        this.setState({count:this.getNumber(this.state.count+1)})\n    };\n\n    decrement = () =>{\n        this.setState({count:this.getNumber(this.state.count-1)})\n\n    };\n\n    setCounter = (num) =>{\n        const theNum = parseInt(num);\n        this.setState({count:this.getNumber(theNum)}); \n    }\n\n    getNumber = (num) =>{\n        if(num>150){\n            return 150;\n        }\n        else if(num < 0){\n            return 0;\n        }\n        else return num;\n    }\n\n\n    render(){\n\n        return (\n            <h1>\n                {this.state.count}\n            </h1>\n        );\n    }\n}\n\nexport default Count;","import React from 'react';\nimport \"semantic-ui-css/semantic.min.css\";\nimport Count from './Count';\n//import './InputField.css';\n\nclass InputField extends React.Component{\n    constructor(props){\n        super(props);\n        this.countElement = React.createRef();\n        this.state = {inputNum:\"\"};\n    }\n\n    increase = () =>{\n        this.countElement.current.increment();\n    }\n\n    decrease = () =>{\n        this.countElement.current.decrement();\n    }\n\n    setInputValue = (num) =>{\n        this.setState({inputNum:num});\n    }\n\n    handleKeyDown = (e) =>{\n        if (e.key === \"Enter\"){\n            this.countElement.current.setCounter(this.state.inputNum);\n        }\n    }\n\n    submit = ()=>{\n\n        this.countElement.current.setCounter(this.state.inputNum);\n    }\n\n\n    render(){\n        return (\n                <div className = \"ui grid\">\n                    <div className = \"two column row\">\n                        <div className = \"column\">\n                            <div className=\"ui action input\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Enter a number...\"\n                                    value ={this.state.inputNum}\n                                    onChange={(e)=> {this.setInputValue(e.target.value)}}\n                                    onKeyDown={(e)=>{this.handleKeyDown(e)}}\n                                    />\n                                <button onClick ={this.submit} className =\"ui teal button\">Submit</button>\n                            </div>\n                            <br/>\n                            <div className=\"ui buttons\">\n                                <button onClick ={this.increase} className=\"ui yellow button up\">Up</button>\n                                <button onClick ={this.decrease} className=\"ui purple button down\">Down</button>\n                            </div>\n\n                        </div> \n                        <div className = \"column\">\n                            <Count ref ={this.countElement}/>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport default InputField;","import React from 'react';\nimport InputField from \"./InputField\";\n\nconst App = ()=>{\n    return(\n        <div>\n            <InputField />\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App/>,document.querySelector(\"#root\"));"],"sourceRoot":""}